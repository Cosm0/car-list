{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { exhaustMap, map, take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class SigninComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.form = new FormGroup({\n      \"email\": new FormControl(null, [Validators.required, Validators.email]),\n      \"password\": new FormControl(null, [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.signInSub = this.authService.signIn$.pipe(exhaustMap(({\n      email,\n      password\n    }) => {\n      console.log('logging in');\n      return this.authService.signIn(email, password);\n    })).subscribe({\n      next: response => {\n        this.router.navigate(['/recipes']);\n      },\n      error: err => console.log(`Error occurred: `, err.error.error)\n    });\n    this.authService.user$.pipe(take(1), map(user => !!user)).subscribe({\n      next: isSignedIn => {\n        if (isSignedIn) {\n          this.router.navigate(['/recipes']);\n        }\n      },\n      error: err => console.log('Something went wrong')\n    });\n  }\n  ngOnDestroy() {\n    this.signInSub.unsubscribe();\n  }\n  onSubmit() {\n    console.log('submit');\n    if (this.form.valid) {\n      this.authService.signInTrigger(this.form.value.email, this.form.value.password);\n    }\n  }\n}\nSigninComponent.ɵfac = function SigninComponent_Factory(t) {\n  return new (t || SigninComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nSigninComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SigninComponent,\n  selectors: [[\"app-signin\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"formControlName\", \"username\", \"type\", \"text\", \"id\", \"usernameInput\", \"placeholder\", \"username\", 1, \"form-control\"], [\"for\", \"password\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"passwordInput\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-default\"]],\n  template: function SigninComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function SigninComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵtext(11, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  width: 600px;\\n  margin-top: 30vh;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9zaWduaW4vc2lnbmluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIHdpZHRoOiA2MDBweDtcbiAgbWFyZ2luLXRvcDogMzB2aDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,UAAU,EAAEC,GAAG,EAAgBC,IAAI,QAAQ,MAAM;;;;;AAS1D,OAAM,MAAOC,eAAe;EAQ1BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAP5D,SAAI,GAAG,IAAIR,SAAS,CAAC;MACnB,OAAO,EAAE,IAAID,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,KAAK,CAAC,CAAC;MACvE,UAAU,EAAE,IAAIX,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC;KACxD,CAAC;EAIqE;EAEvEE,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,WAAW,CAACM,OAAO,CACtCC,IAAI,CAACZ,UAAU,CAAC,CAAC;MAACQ,KAAK;MAAEK;IAAQ,CAAC,KAAI;MACrCC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAEzB,OAAO,IAAI,CAACV,WAAW,CAACW,MAAM,CAACR,KAAK,EAAEK,QAAQ,CAAC;IACjD,CAAC,CAAC,CAAC,CACFI,SAAS,CAAC;MACTC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;MACpC,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAKR,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEO,GAAG,CAACD,KAAK,CAACA,KAAK;KAChE,CAAC;IAEF,IAAI,CAAChB,WAAW,CAACkB,KAAK,CAACX,IAAI,CACvBV,IAAI,CAAC,CAAC,CAAC,EACPD,GAAG,CAAEuB,IAAI,IAAK,CAAC,CAACA,IAAI,CAAC,CAAC,CACvBP,SAAS,CAAC;MACTC,IAAI,EAAGO,UAAU,IAAI;QACnB,IAAGA,UAAU,EAAE;UACb,IAAI,CAACnB,MAAM,CAACc,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;;MAEtC,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAKR,OAAO,CAACC,GAAG,CAAC,sBAAsB;KACnD,CAAC;EACR;EAEAW,WAAW;IACT,IAAI,CAAChB,SAAS,CAACiB,WAAW,EAAE;EAC9B;EAEAC,QAAQ;IACNd,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IAErB,IAAG,IAAI,CAACc,IAAI,CAACC,KAAK,EAAE;MAClB,IAAI,CAACzB,WAAW,CAAC0B,aAAa,CAAC,IAAI,CAACF,IAAI,CAACG,KAAK,CAACxB,KAAK,EAAE,IAAI,CAACqB,IAAI,CAACG,KAAK,CAACnB,QAAQ,CAAC;;EAEnF;;AA/CWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX5BC,8BAAuB;MACIA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC9CD,8BAAwB;MACAA,wBAAQ;MAAAA,iBAAQ;MACtCA,2BAKyB;MAC3BA,iBAAM;MACNA,8BAAwB;MACAA,wBAAQ;MAAAA,iBAAQ;MACtCA,2BAKyB;MAC3BA,iBAAM;MACNA,kCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;;;MAnBzDA,eAAkB;MAAlBA,oCAAkB","names":["FormControl","FormGroup","Validators","exhaustMap","map","take","SigninComponent","constructor","authService","router","required","email","ngOnInit","signInSub","signIn$","pipe","password","console","log","signIn","subscribe","next","response","navigate","error","err","user$","user","isSignedIn","ngOnDestroy","unsubscribe","onSubmit","form","valid","signInTrigger","value","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/ppodsiadlik/repo-prv/car-list/front/src/app/auth/signin/signin.component.ts","/home/ppodsiadlik/repo-prv/car-list/front/src/app/auth/signin/signin.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { exhaustMap, map, Subscription, take } from 'rxjs';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit, OnDestroy {\n  form = new FormGroup({\n    \"email\": new FormControl(null, [Validators.required, Validators.email]),\n    \"password\": new FormControl(null, [Validators.required]),\n  });\n\n  private signInSub: Subscription;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.signInSub = this.authService.signIn$\n      .pipe(exhaustMap(({email, password}) => {\n        console.log('logging in');\n\n        return this.authService.signIn(email, password);\n      }))\n      .subscribe({\n        next: (response) => {\n          this.router.navigate(['/recipes']);\n        },\n        error: (err) => console.log(`Error occurred: `, err.error.error),\n      });\n\n      this.authService.user$.pipe(\n          take(1),\n          map((user) => !!user))\n        .subscribe({\n          next: (isSignedIn) => {\n            if(isSignedIn) {\n              this.router.navigate(['/recipes'])\n            }\n          },\n          error: (err) => console.log('Something went wrong')\n        });\n  }\n\n  ngOnDestroy(): void {\n    this.signInSub.unsubscribe();\n  }\n\n  onSubmit() {\n    console.log('submit');\n\n    if(this.form.valid) {\n      this.authService.signInTrigger(this.form.value.email, this.form.value.password);\n    }\n  }\n}\n","<div class=\"container\">\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"username\">username</label>\n      <input\n        formControlName=\"username\"\n        type=\"text\"\n        class=\"form-control\"\n        id=\"usernameInput\"\n        placeholder=\"username\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input\n        formControlName=\"password\"\n        type=\"password\"\n        class=\"form-control\"\n        id=\"passwordInput\"\n        placeholder=\"Password\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}