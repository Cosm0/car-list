{"ast":null,"code":"import { catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ResponseErrorInterceptorService {\n  intercept(req, next) {\n    return next.handle(req).pipe(catchError(err => {\n      err.error.error = err.error?.error || err.message;\n      throw err;\n    }));\n  }\n}\nResponseErrorInterceptorService.ɵfac = function ResponseErrorInterceptorService_Factory(t) {\n  return new (t || ResponseErrorInterceptorService)();\n};\nResponseErrorInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ResponseErrorInterceptorService,\n  factory: ResponseErrorInterceptorService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAoB,MAAM;;AAG7C,OAAM,MAAOC,+BAA+B;EAC1CC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,OAAOA,IAAI,CAACC,MAAM,CAACF,GAAG,CAAC,CAACG,IAAI,CAACN,UAAU,CAACO,GAAG,IAAG;MAC5CA,GAAG,CAACC,KAAK,CAACA,KAAK,GAAGD,GAAG,CAACC,KAAK,EAAEA,KAAK,IAAID,GAAG,CAACE,OAAO;MACjD,MAAMF,GAAG;IACX,CAAC,CAAC,CAAC;EACL;;AANWN,+BAA+B;mBAA/BA,+BAA+B;AAAA;AAA/BA,+BAA+B;SAA/BA,+BAA+B;EAAAS,SAA/BT,+BAA+B;AAAA","names":["catchError","ResponseErrorInterceptorService","intercept","req","next","handle","pipe","err","error","message","factory"],"sourceRoot":"","sources":["/home/ppodsiadlik/repo-prv/car-list/front/src/app/shared/response-error-interceptor.service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable } from 'rxjs';\n\n@Injectable()\nexport class ResponseErrorInterceptorService implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(catchError(err => {\n      err.error.error = err.error?.error || err.message;\n      throw(err);\n    }));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}