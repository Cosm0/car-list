{"ast":null,"code":"import { inject } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { map, take } from \"rxjs\";\nimport { AuthService } from \"../auth/auth.service\";\nexport const canActivateProtectedRoute = (route, state) => {\n  const router = inject(Router);\n  return inject(AuthService).user$.pipe(take(1), map(user => {\n    const isAuthenticated = !!user;\n    return isAuthenticated ? true : router.createUrlTree(['/sign-in']);\n  }));\n};","map":{"version":3,"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAgDC,MAAM,QAAsC,iBAAiB;AAC7G,SAAqBC,GAAG,EAAEC,IAAI,QAAQ,MAAM;AAE5C,SAASC,WAAW,QAAQ,sBAAsB;AAIlD,OAAO,MAAMC,yBAAyB,GACtC,CAACC,KAA6B,EAAEC,KAA0B,KAA2B;EACnF,MAAMC,MAAM,GAAGR,MAAM,CAACC,MAAM,CAAC;EAC7B,OAAOD,MAAM,CAACI,WAAW,CAAC,CAACK,KAAK,CAACC,IAAI,CACnCP,IAAI,CAAC,CAAC,CAAC,EACPD,GAAG,CAACS,IAAI,IAAG;IACT,MAAMC,eAAe,GAAG,CAAC,CAACD,IAAI;IAC9B,OAAOC,eAAe,GAAG,IAAI,GAAGJ,MAAM,CAACK,aAAa,CAAE,CAAC,UAAU,CAAC,CAAE;EACtE,CAAC,CAAC,CAAC;AACP,CAAC","names":["inject","Router","map","take","AuthService","canActivateProtectedRoute","route","state","router","user$","pipe","user","isAuthenticated","createUrlTree"],"sourceRoot":"","sources":["/home/ppodsiadlik/repo-prv/car-list/front/src/app/guards/canActivateProtectedRoute.guard.ts"],"sourcesContent":["import { inject } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\nimport { Observable, map, take } from \"rxjs\";\n\nimport { AuthService } from \"../auth/auth.service\";\n\ntype CanActivateReturnType = Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree;\n\nexport const canActivateProtectedRoute: CanActivateFn =\n(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): CanActivateReturnType => {\n  const router = inject(Router);\n  return inject(AuthService).user$.pipe(\n    take(1),\n    map(user => {\n      const isAuthenticated = !!user;\n      return isAuthenticated ? true : router.createUrlTree((['/sign-in']));\n    }));\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}